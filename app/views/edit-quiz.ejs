<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'/>
    <link rel="stylesheet" href="/css/main.css"/>
    <link rel="stylesheet" href="/css/game-layout.css"/>
    <title>Quizzone - Edytuj Quiz</title>
</head>
<body>
    <div class="ovl-app">
    <%- include('components/left-sidebar',{sitename: 'quizzes',username: ''}); -%>
        <div class="cat-cnt">
            <div class="quizz-search-header">
                <div class="search-slogan">Edytuj quiz</div>
            </div>
            <div class="quiz-edit-form">
                <form id="quiz-form">
                    <label for="quiz-name">Nazwa quizu:</label><br>
                    <input type="text" id="quiz-name" name="name" required>
                    <br>
                    <label for="category-select">Kategoria:</label><br>
                    <select id="category-select" name="category" required>
                        <option value="">Wybierz kategorię</option>
                    </select>
                    <br>
                    <button type="submit" id="edit-btn" style='background-color: #462ee2;' class="quizz-footer-option1">
                        <i class='bx bx-edit'></i>
                        Zapisz zmiany
                    </button>
                </form>
                <div id="response-message"></div>

                <!-- Formularz dodawania pytania do quizu -->
                <div class="quiz-question-form">
                    <h3>Dodaj nowe pytanie</h3>
                    <form id="question-form">
                        <label for="question-content">Treść pytania:</label><br>
                        <input type="text" id="question-content" name="content" required><br>
                        
                        <label for="answer-a">Odpowiedź A:</label><br>
                        <input type="text" id="answer-a" name="answerA" required><br>
                        
                        <label for="answer-b">Odpowiedź B:</label><br>
                        <input type="text" id="answer-b" name="answerB" required><br>
                        
                        <label for="answer-c">Odpowiedź C:</label><br>
                        <input type="text" id="answer-c" name="answerC" required><br>
                        
                        <label for="answer-d">Odpowiedź D:</label><br>
                        <input type="text" id="answer-d" name="answerD" required><br>
                        
                        <label for="correct-answer">Prawidłowa odpowiedź:</label><br>
                        <select id="correct-answer" name="correctAnswer" required>
                            <option value="A">A</option>
                            <option value="B">B</option>
                            <option value="C">C</option>
                            <option value="D">D</option>
                        </select><br>

                        <button type="submit" id="add-question-btn" style='background-color: #28a745;' class="quizz-footer-option1">
                            <i class='bx bx-plus'></i>
                            Dodaj pytanie
                        </button>
                    </form>
                    <div id="question-response-message"></div>
                </div>     
            </div>
        </div>
        

        <script>
            // Pobieranie ID quizu z URL
            const quizId = "<%= id %>";

            // Funkcja pobierająca kategorie z API
            async function loadCategories() {
                try {
                    const response = await fetch('http://quizzone.zapto.org:8000/api/categories', {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Błąd pobierania kategorii');
                    }

                    const data = await response.json();
                    const categories = data.categories;
                    const categorySelect = document.getElementById('category-select');

                    // Dodanie opcji do select na podstawie danych z API
                    categories.forEach(category => {
                        const option = document.createElement('option');
                        option.value = category.id;
                        option.textContent = category.name;
                        categorySelect.appendChild(option);
                    });

                    // Wczytanie szczegółów quizu po załadowaniu kategorii
                    loadQuizDetails();

                } catch (error) {
                    console.error('Error:', error);
                    document.getElementById('response-message').innerHTML = 
                        'Wystąpił błąd podczas pobierania kategorii. Spróbuj ponownie.';
                }
            }

            // Funkcja pobierająca dane quizu z API
            async function loadQuizDetails() {
                if (!quizId) return;

                try {
                    const response = await fetch(`http://quizzone.zapto.org:8000/api/quiz/${quizId}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${localStorage.getItem('jwt-token')}`
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Błąd pobierania danych quizu');
                    }

                    const data = await response.json();
                    const quizData=data["quiz"];
                    document.getElementById('quiz-name').value = quizData["name"];
                    document.getElementById('category-select').value = quizData["categoryId"];
                    
                } catch (error) {
                    console.error('Error:', error);
                    document.getElementById('response-message').innerHTML = 
                        'Wystąpił błąd podczas pobierania danych quizu. Spróbuj ponownie.';
                }
            }

            // Wywołanie funkcji po załadowaniu strony
            window.onload = loadCategories;

            // Obsługa wysyłania formularza
            document.getElementById('quiz-form').addEventListener('submit', async (event) => {
                event.preventDefault();
                
                const quizName = document.getElementById('quiz-name').value;
                const categoryId = document.getElementById('category-select').value;
                const token = localStorage.getItem('jwt-token');

                try {
                    const response = await fetch(`http://quizzone.zapto.org:8000/api/quiz/${quizId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                        body: JSON.stringify({ name: quizName, categoryId: categoryId })
                    });

                    if (!response.ok) {
                        throw new Error('Błąd edycji quizu');
                    }

                    document.getElementById('response-message').innerHTML = 'Quiz został pomyślnie zaktualizowany.';
                    window.location.href = `/my-quizzes`;
                } catch (error) {
                    console.error('Error:', error);
                    document.getElementById('response-message').innerHTML = 
                        'Wystąpił błąd podczas edycji quizu. Spróbuj ponownie.';
                }
            });
             // Obsługa wysyłania formularza dodawania pytania
             document.getElementById('question-form').addEventListener('submit', async (event) => {
                event.preventDefault();

                const content = document.getElementById('question-content').value;
                const answerA = document.getElementById('answer-a').value;
                const answerB = document.getElementById('answer-b').value;
                const answerC = document.getElementById('answer-c').value;
                const answerD = document.getElementById('answer-d').value;
                const selectedCorrectAnswer = document.getElementById('correct-answer').value;

                // Przypisuje pełną treść odpowiedzi na podstawie wybranej opcji
                let correctAnswer;
                switch (selectedCorrectAnswer) {
                    case "A":
                        correctAnswer = answerA;
                        break;
                    case "B":
                        correctAnswer = answerB;
                        break;
                    case "C":
                        correctAnswer = answerC;
                        break;
                    case "D":
                        correctAnswer = answerD;
                        break;
                    default:
                        correctAnswer = ""; // W razie gdyby nic nie było wybrane
                }
                const token = localStorage.getItem('jwt-token');

                try {
                    const response = await fetch(`http://quizzone.zapto.org:8000/api/quiz/${quizId}/add-question`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                        body: JSON.stringify({ 
                            content: content, 
                            answerA: answerA, 
                            answerB: answerB, 
                            answerC: answerC, 
                            answerD: answerD, 
                            correctAnswer: correctAnswer
                        })
                    });

                    if (!response.ok) {
                        throw new Error('Błąd dodawania pytania');
                    }

                    document.getElementById('question-response-message').innerHTML = 'Pytanie zostało dodane pomyślnie.';
                    document.getElementById('question-form').reset(); // Resetuje formularz
                } catch (error) {
                    console.error('Error:', error);
                    document.getElementById('question-response-message').innerHTML = 
                        'Wystąpił błąd podczas dodawania pytania. Spróbuj ponownie.';
                }
            });
        </script>
    </div>
</body>
</html>
